services:
  db:
    hostname: db
    image: postgres:15
    volumes:
      - ./postgres_data:/var/lib/postgresql/data  # Локальна папка на ПК
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    restart: always

  app:
    build: .
    environment:
      DB_HOST:
      DB_NAME:
      DB_USER:
      DB_PASSWORD:
    depends_on:
      - db
    ports:
      - "8000:8000"
    env_file:
      .env
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py shell < create_superuser .py &&
        python manage.py runserver 0.0.0.0:8000
      "
  yt-django:
    build:
      context: .
      dockerfile: Dockerfile
    image: yt_django:latest
    container_name: yt
    depends_on:
      - db
      - app

    volumes:
      - static_volume:/yt/static
      - media_volume:/yt/media
    env_file:
      - .env
    command: >
      sh -c "until python -c 'import socket; socket.create_connection((\"db\", 5432))' > /dev/null 2>&1; do sleep 1; done
      && python manage.py makemigrations
      && python manage.py migrate
      && python manage.py runserver 0.0.0.0:8000"

#  nginx:
#    build:
#      context: ./docker/nginx
#      dockerfile: Dockerfile
#    image: yt_nginx:latest
#    container_name: yt_nginx
#    volumes:
#      - static_volume:/yt/static
#      - media_volume:/yt/media
#    depends_on:
#      - yt-django
#    ports:
#      - "80:80"

volumes:
  static_volume:
  media_volume:
  postgres_data:
